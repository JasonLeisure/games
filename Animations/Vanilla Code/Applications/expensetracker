<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Expense Tracker App</title>
    <link href="https://fonts.googleapis.com/css?family=Titillium+Web&display=swap" rel="stylesheet">
    <style>

* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

body {
    font-family: 'Titillium Web', sans-serif;
    background: linear-gradient(to bottom, #222, #333);
    color: #fff;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    min-height: 100vh;
}

header {
    background-color: #333;
    text-align: center;
    padding: 20px 0;
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}

.title {
    font-size: 36px;
    font-weight: bold;
    text-transform: uppercase;
    letter-spacing: 2px;
}

.content {
    width: 100%;
    max-width: 800px;
    background-color: rgba(255, 255, 255, 0.1);
    border-radius: 10px;
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
    padding: 20px;
}

.secondTitle {
    font-size: 24px;
    font-weight: bold;
    margin-bottom: 20px;
    color: #f5f5f5;
}

.form {
    display: flex;
    flex-wrap: wrap;
    justify-content: space-between;
}

.formLine {
    flex-basis: 48%;
    margin-bottom: 15px;
}

span {
    font-weight: bold;
    color: #f5f5f5;
}

select, input {
    width: 100%;
    padding: 12px;
    border: none;
    border-radius: 5px;
    font-size: 16px;
    margin-bottom: 10px;
    background-color: rgba(255, 255, 255, 0.1);
    color: #000; /* Text color changed to black */
}

select:hover, input:hover {
    background-color: rgba(255, 255, 255, 0.2);
}

button {
    background-color: #4CAF50;
    color: #fff;
    border: none;
    padding: 12px 20px;
    cursor: pointer;
    border-radius: 5px;
    font-size: 18px;
    transition: background-color 0.3s;
}

button:hover {
    background-color: #45a049;
}

table {
    width: 100%;
    border-collapse: collapse;
}

th, td {
    padding: 12px;
    text-align: left;
}

th {
    background-color: #333;
    color: #fff;
    font-weight: bold;
}

tr:nth-child(even) {
    background-color: rgba(255, 255, 255, 0.1);
}

.deleteButton {
    color: red;
    cursor: pointer;
    text-decoration: underline;
}

/* Responsive Styles */
@media (max-width: 768px) {
    .formLine {
        flex-basis: 100%;
    }
}

/* Chart styling */
#expenseChart {
    max-width: 100%;
    margin: 20px 0;
}
    </style>
</head>
<body>
    <header>
        <h1 class="title">Expense Tracker App</h1>
    </header>

    <section class="content">
        <h3 class="secondTitle">Add a new item: </h3>
        <div class="form">
            <form id="expForm">
                <div class="formLine">
                    <span for="type">Type:</span>
                    <select id="type">
                        <option value="chooseOne">Choose one...</option>
                        <option value="Card">Card &#128179;</option>
                        <option value="Cash">Cash &#127818;</option>
                        <option value="Cryptocoin">Cryptocoin &#127760;</option>
                        <option value="Other">Other &#128194;</option>
                    </select>
                </div>
                <div class="formLine">
                    <span for="name">Name:</span>
                    <input type="text" id="name">
                </div>

                <div class "formLine">
                    <span for="date">Date:</span>
                    <input type="date" id="date">
                </div>
                <div class="formLine">
                    <span for="amount">Amount:</span>
                    <input type="text" id="amount">
                    <span id="amount-error" style="color: red;"></span> <!-- Validation error message -->
                </div>
                <button type="submit" class="buttonSave">Add a new expense</button>
            </form>
        </div>
    </section>

    <section class="content">
        <table class="table">
            <thead>
                <tr>
                    <th>Type <button onclick="sortTable('type')">Sort</button></th>
                    <th>Name</th>
                    <th>Date <button onclick="sortTable('date')">Sort</button></th>
                    <th>Amount <button onclick="sortTable('amount')">Sort</button></th>
                    <th>Options</th>
                </tr>
            </thead>
            <tbody id="expenseTable">

            </tbody>
        </table>
    </section>

    <!-- Expense Chart Section -->
    <section class="content">
        <h3 class="secondTitle">Expense Statistics</h3>
        <canvas id="expenseChart"></canvas>
    </section>


<script>
    document.getElementById('expForm').addEventListener('submit', addExpense);

    // Initial array of expenses, reading from localStorage
    const expenses = JSON.parse(localStorage.getItem('expenses')) || [];

    function addExpense(e) {
        e.preventDefault();

        // Get type, name, date, and amount
        let type = document.getElementById('type').value;
        let name = document.getElementById('name').value;
        let date = document.getElementById('date').value;
        let amount = document.getElementById('amount').value;

        if (type !== 'chooseOne' && name.length > 0 && date !== 0 && amount > 0) {
            const expense = {
                type,
                name,
                date,
                amount,
                id: expenses.length > 0 ? expenses[expenses.length - 1].id + 1 : 1,
            };

            expenses.push(expense);

            // Update localStorage
            localStorage.setItem('expenses', JSON.stringify(expenses));
        }

        document.getElementById('expForm').reset();
        showExpenses();
    }

    const showExpenses = () => {
        const expenseTable = document.getElementById('expenseTable');
        expenseTable.innerHTML = '';

        for (let i = 0; i < expenses.length; i++) {
            expenseTable.innerHTML += `
                <tr>
                    <td>${expenses[i].type}</td>
                    <td>${expenses[i].name}</td>
                    <td>${expenses[i].date}</td>
                    <td>$${expenses[i].amount}</td>
                    <td><a class="deleteButton" onclick="deleteExpense(${expenses[i].id})">Delete</a></td>
                </tr>
            `;
        }
    }

    const deleteExpense = (id) => {
        for (let i = 0; i < expenses.length; i++) {
            if (expenses[i].id === id) {
                expenses.splice(i, 1);
            }
        }

        // Update localStorage
        localStorage.setItem('expenses', JSON.stringify(expenses));
        showExpenses();
    }

    showExpenses();

</script>
</body>
</html>
