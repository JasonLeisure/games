<!DOCTYPE html>
<html>
<head>
    <style>
        * {
            margin: 0;
            padding: 0;
            border: 0;
        }
        body {
            overflow: hidden;
            background-color: #111; /* Darker background color for contrast */
        }
        canvas {
            position: absolute;
            top: 0;
            left: 0;
            width: 100vw;
            height: 100vh;
            overflow: hidden;
            display: block;
        }
    </style>
</head>
<body>
    <canvas></canvas>
    <script>
        var canvas, ctx;
        var lavaLampBlobs = [];

        canvas = document.getElementsByTagName('canvas')[0];
        ctx = canvas.getContext('2d');
        canvas.width = window.innerWidth;
        canvas.height = window.innerHeight;

        var viscosity = 0.98;
        var dampening = 0.02;
        var mouseDown = false;
        var lastMouseX, lastMouseY;

        function createInitialBlobs() {
            for (let i = 0; i < canvas.width; i += 20) {
                for (let j = 0; j < canvas.height; j += 20) {
                    var randomColor = getRandomLavaColor();
                    var alpha = Math.random() * 0.3 + 0.5; // More transparent
                    var velocityX = 0;
                    var velocityY = 0;
                    lavaLampBlobs.push({ x: i + Math.random() * 10, y: j + Math.random() * 10, alpha: alpha, radius: Math.random() * 10 + 5, color: randomColor, originalX: i + Math.random() * 10, originalY: j + Math.random() * 10, velocityX: velocityX, velocityY: velocityY });
                }
            }
        }

        function getRandomLavaColor() {
            // Lava lamp-like colors
            var colors = ['#FF4500', '#FF6347', '#FF7F50', '#FF8C00', '#FFA07A', '#FFD700', '#FFEC8B'];
            return colors[Math.floor(Math.random() * colors.length)];
        }

        function updateBlobPositions() {
            for (let i = 0; i < lavaLampBlobs.length; i++) {
                var blob = lavaLampBlobs[i];

                blob.velocityX += (Math.random() - 0.5) * 0.1;
                blob.velocityY += (Math.random() - 0.5) * 0.1;

                blob.velocityX *= viscosity;
                blob.velocityY *= viscosity;

                blob.velocityX -= blob.velocityX * dampening;
                blob.velocityY -= blob.velocityY * dampening;

                blob.x += blob.velocityX;
                blob.y += blob.velocityY;

                if (blob.x < 0 || blob.x > canvas.width) {
                    blob.velocityX *= -1;
                }
                if (blob.y < 0 || blob.y > canvas.height) {
                    blob.velocityY *= -1;
                }

                blob.alpha = Math.min(blob.alpha + 0.001, 0.7); // Adjusted alpha increase for smoother transitions
            }
        }

        function animate() {
            requestAnimationFrame(animate);
            ctx.clearRect(0, 0, canvas.width, canvas.height);
            ctx.fillStyle = 'rgba(0, 0, 0, 0.05)'; // Adjusted background color for a subtle trail effect
            ctx.fillRect(0, 0, canvas.width, canvas.height);
            updateBlobPositions();

            for (let i = 0; i < lavaLampBlobs.length; i++) {
                var blob = lavaLampBlobs[i];
                ctx.globalAlpha = blob.alpha;
                var gradient = ctx.createRadialGradient(blob.x, blob.y, 0, blob.x, blob.y, blob.radius);
                gradient.addColorStop(0, blob.color);
                gradient.addColorStop(1, 'rgba(0, 0, 0, 0)');
                ctx.fillStyle = gradient;

                ctx.beginPath();
                ctx.arc(blob.x, blob.y, blob.radius, 0, Math.PI * 2);
                ctx.fill();
                ctx.closePath();
            }

            // Reset global alpha after rendering blobs
            ctx.globalAlpha = 1;
        }

        createInitialBlobs();
        animate();

        function handleMouseDown(e) {
            mouseDown = true;
            lastMouseX = e.clientX;
            lastMouseY = e.clientY;
        }

        function handleMouseMove(e) {
            if (mouseDown) {
                var x = e.clientX;
                var y = e.clientY;

                for (let i = 0; i < lavaLampBlobs.length; i++) {
                    var blob = lavaLampBlobs[i];
                    var dx = x - blob.x;
                    var dy = y - blob.y;
                    var distance = Math.sqrt(dx * dx + dy * dy);

                    if (distance < 50) {
                        blob.velocityX += dx * 0.01;
                        blob.velocityY += dy * 0.01;
                    }
                }

                lastMouseX = x;
                lastMouseY = y;
            }
        }

        function handleMouseUp() {
            mouseDown = false;
        }

        canvas.addEventListener('mousedown', handleMouseDown);
        canvas.addEventListener('mousemove', handleMouseMove);
        canvas.addEventListener('mouseup', handleMouseUp);
    </script>
</body>
</html>
